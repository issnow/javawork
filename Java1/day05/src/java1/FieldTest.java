package java1;
/*
属性/成员变量:
语法格式：
[修饰符1] class 类名{ [修饰符2] 数据类型 成员变量名 [= 初始化值]; }
说明：
– 位置要求：必须在类中，方法外
– 修饰符 2( 暂不考虑
  • 常用的权限修饰符有： private 、缺省、 protected 、 public
  • 其他修饰符： static 、 final
– 数据类型
  • 任何基本数据类型 如 int 、 Boolean) 或 任何引用数据类型。
– 成员变量名
  • 属于标识符，符合命名规则和规范即可。
– 初始化值
  • 根据情况，可以显式赋值；也可以不赋值，使用默认值
注意:
1、变量的分类：成员变量与局部变量
  在方法体外，类体内声明的变量称为成员变量。
  在方法体内部等位置声明的变量称为局部变量。
2、成员变量 与 局部变量 的对比
 相同点
  – 变量声明的格式相同： 数据类型 变量名 = 初始化值
  – 变量必须先声明、后初始化、再使 用。
  – 变量都有其对应的作用域。只在其作用域内是有效的不同
 不同点
  1、声明位置和方式 (1)实例变量：在类中方法外 (2)局部变量：在方法体{}中或方法的形参列表、代码块中
  2、在内存中存储的位置不同 (1)实例变量：堆 (2)局部变量：栈
  3、生命周期 (1)实例变量：和对象的生命周期一样，随着对象的创建而存在，随着对象被GC回收而消亡，
  而且每一个对象的实例变量是独立的。(2)局部变量：和方法调用的生命周期一样，每一次方法被调用而在存在，
  随着方法执行的结束而消亡， 而且每一次方法调用都是独立。
  4、作用域 (1)实例变量：通过对象就可以使用，本类中直接调用，其他类中“对象.实例变量”
  (2)局部变量：出了作用域就不能使用
  5、修饰符(后面来讲) (1)实例变量：public,protected,缺省,private,final,volatile,transient等 (2)局部变量：final
  6、默认值 (1)实例变量：有默认值 (2)局部变量：没有，必须手动初始化。其中的形参比较特殊，靠实参给它初始化。
3、对象属性的默认初始化赋值
  当一个对象被创建时，会对其中各种类型的成员变量自动进行初始化赋值。和之前数组的默认值一样
 */
public class FieldTest {
  public static void main(String[] args) {
    Person1 p = new Person1();
    System.out.println(p.name);
    System.out.println(p.age);
    p.eat("i");
  }
}
class Person1 {
  //属性(成员变量)
  String name;
  int age;

  //方法
  public void eat(String who){
    //who-->局部变量
    String food = "chicken";//局部变量
    System.out.println(who + " eat " + food);
  }
}